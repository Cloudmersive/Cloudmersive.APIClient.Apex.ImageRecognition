/*
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result from classifying the Gender of people in an image
 */
public class SwagGenderDetectionResult implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * People in the image annotated with gender information
     * @return personWithGender
     */
    public List<SwagPersonWithGender> personWithGender { get; set; }

    /**
     * Number of people identified in the image with a gender
     * @return peopleIdentified
     */
    public Integer peopleIdentified { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'PersonWithGender' => 'personWithGender',
        'PeopleIdentified' => 'peopleIdentified'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagGenderDetectionResult() {
        personWithGender = new List<SwagPersonWithGender>();
    }

    public static SwagGenderDetectionResult getExample() {
        SwagGenderDetectionResult genderDetectionResult = new SwagGenderDetectionResult();
        genderDetectionResult.successful = true;
        genderDetectionResult.personWithGender = new List<SwagPersonWithGender>{SwagPersonWithGender.getExample()};
        genderDetectionResult.peopleIdentified = 123;
        return genderDetectionResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagGenderDetectionResult) {
            SwagGenderDetectionResult genderDetectionResult = (SwagGenderDetectionResult) obj;
            return this.successful == genderDetectionResult.successful
                && this.personWithGender == genderDetectionResult.personWithGender
                && this.peopleIdentified == genderDetectionResult.peopleIdentified;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (personWithGender == null ? 0 : System.hashCode(personWithGender));
        hashCode = (17 * hashCode) + (peopleIdentified == null ? 0 : System.hashCode(peopleIdentified));
        return hashCode;
    }
}

