/*
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of a find symbol operation on an input image
 */
public class SwagFindSymbolResult implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Score between 0.0 and 1.0 that measures how closely the symbol matched; scores above 0.2 are good
     * @return matchScore
     */
    public Double matchScore { get; set; }

    /**
     * X location of the left edge of the found location in pixels
     * @return xleft
     */
    public Integer xleft { get; set; }

    /**
     * Y location of the top edge of the found location in pixels
     * @return ytop
     */
    public Integer ytop { get; set; }

    /**
     * Width of the found location in pixels
     * @return width
     */
    public Integer width { get; set; }

    /**
     * Height of the found location in pixels
     * @return height
     */
    public Integer height { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'MatchScore' => 'matchScore',
        'XLeft' => 'xleft',
        'YTop' => 'ytop',
        'Width' => 'width',
        'Height' => 'height'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagFindSymbolResult getExample() {
        SwagFindSymbolResult findSymbolResult = new SwagFindSymbolResult();
        findSymbolResult.successful = true;
        findSymbolResult.matchScore = 1.3579;
        findSymbolResult.xleft = 123;
        findSymbolResult.ytop = 123;
        findSymbolResult.width = 123;
        findSymbolResult.height = 123;
        return findSymbolResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagFindSymbolResult) {
            SwagFindSymbolResult findSymbolResult = (SwagFindSymbolResult) obj;
            return this.successful == findSymbolResult.successful
                && this.matchScore == findSymbolResult.matchScore
                && this.xleft == findSymbolResult.xleft
                && this.ytop == findSymbolResult.ytop
                && this.width == findSymbolResult.width
                && this.height == findSymbolResult.height;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (matchScore == null ? 0 : System.hashCode(matchScore));
        hashCode = (17 * hashCode) + (xleft == null ? 0 : System.hashCode(xleft));
        hashCode = (17 * hashCode) + (ytop == null ? 0 : System.hashCode(ytop));
        hashCode = (17 * hashCode) + (width == null ? 0 : System.hashCode(width));
        hashCode = (17 * hashCode) + (height == null ? 0 : System.hashCode(height));
        return hashCode;
    }
}

