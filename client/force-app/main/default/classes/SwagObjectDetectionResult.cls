/*
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of detecting objects in an image
 */
public class SwagObjectDetectionResult implements Swagger.MappedProperties {
    /**
     * Was the image processed successfully?
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Array of objects detected in the scene
     * @return objects
     */
    public List<SwagDetectedObject> objects { get; set; }

    /**
     * Number of objects detected in the scene
     * @return objectCount
     */
    public Integer objectCount { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'Objects' => 'objects',
        'ObjectCount' => 'objectCount'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagObjectDetectionResult() {
        objects = new List<SwagDetectedObject>();
    }

    public static SwagObjectDetectionResult getExample() {
        SwagObjectDetectionResult objectDetectionResult = new SwagObjectDetectionResult();
        objectDetectionResult.successful = true;
        objectDetectionResult.objects = new List<SwagDetectedObject>{SwagDetectedObject.getExample()};
        objectDetectionResult.objectCount = 123;
        return objectDetectionResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagObjectDetectionResult) {
            SwagObjectDetectionResult objectDetectionResult = (SwagObjectDetectionResult) obj;
            return this.successful == objectDetectionResult.successful
                && this.objects == objectDetectionResult.objects
                && this.objectCount == objectDetectionResult.objectCount;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (objects == null ? 0 : System.hashCode(objects));
        hashCode = (17 * hashCode) + (objectCount == null ? 0 : System.hashCode(objectCount));
        return hashCode;
    }
}

