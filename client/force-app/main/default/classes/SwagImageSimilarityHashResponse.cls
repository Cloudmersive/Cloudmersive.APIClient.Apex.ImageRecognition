/*
 * imageapi
 * Image Recognition and Processing APIs let you use Machine Learning to recognize and process images, and also perform useful image modification operations.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of performing an image hash operation
 */
public class SwagImageSimilarityHashResponse implements Swagger.MappedProperties {
    /**
     * True if successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * String representing image perceptual hash value; values with smaller Hamming Distances are more similar than ones with large Hamming Distances
     * @return imageHash
     */
    public String imageHash { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'ImageHash' => 'imageHash'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagImageSimilarityHashResponse getExample() {
        SwagImageSimilarityHashResponse imageSimilarityHashResponse = new SwagImageSimilarityHashResponse();
        imageSimilarityHashResponse.successful = true;
        imageSimilarityHashResponse.imageHash = 'aeiou';
        return imageSimilarityHashResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagImageSimilarityHashResponse) {
            SwagImageSimilarityHashResponse imageSimilarityHashResponse = (SwagImageSimilarityHashResponse) obj;
            return this.successful == imageSimilarityHashResponse.successful
                && this.imageHash == imageSimilarityHashResponse.imageHash;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (imageHash == null ? 0 : System.hashCode(imageHash));
        return hashCode;
    }
}

